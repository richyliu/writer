{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/results/results.component.css","webpack:///./src/app/results/results.component.html","webpack:///./src/app/results/results.component.ts","webpack:///./src/app/services/image-request.service.ts","webpack:///./src/app/take-picture/take-picture.component.css","webpack:///./src/app/take-picture/take-picture.component.html","webpack:///./src/app/take-picture/take-picture.component.ts","webpack:///./src/app/tutorial/tutorial.component.css","webpack:///./src/app/tutorial/tutorial.component.html","webpack:///./src/app/tutorial/tutorial.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {TutorialComponent} from './tutorial/tutorial.component';\nimport {GameComponent} from './game/game.component';\nimport {TakePictureComponent} from './take-picture/take-picture.component';\nimport {ResultsComponent} from './results/results.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'tutorial', component: TutorialComponent},\n  { path: 'game', component: GameComponent},\n  { path: 'take-picture', component: TakePictureComponent},\n  { path: 'results', component: ResultsComponent},\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\nimport {ImageRequestService} from './services/image-request.service';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'writer';\n\n  constructor() {}\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { OnsenModule } from 'ngx-onsenui';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TutorialComponent } from './tutorial/tutorial.component';\nimport { GameComponent } from './game/game.component';\nimport { TakePictureComponent } from './take-picture/take-picture.component';\nimport { ResultsComponent } from './results/results.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    TutorialComponent,\n    GameComponent,\n    TakePictureComponent,\n    ResultsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    OnsenModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Game</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <ons-card>\\n      <p>\\n        {{definition}}\\n      </p>\\n      <ons-button (click)=\\\"nextWord()\\\" *ngIf=\\\"!hideTakePicture\\\">Next</ons-button>\\n    </ons-card>\\n\\n    <ons-list>\\n      <ons-list-item modifier=\\\"chevron\\\" tappable routerLink=\\\"/take-picture\\\" *ngIf=\\\"hideTakePicture\\\">Take Picture</ons-list-item>\\n    </ons-list>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  definition: string = 'a person that wins something';\n  hideTakePicture: boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n\n  nextWord(): void {\n    this.definition = '';\n    this.hideTakePicture = false;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Your text:\\n</p>\\n<p>\\n  {{imageText}}\\n</p>\\n<button routerLink=\\\"/welcome\\\">Again!</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport * as queryString from 'querystring';\n\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  imageText: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    // get the query, removing the ? (although documentation says unnecessary, still necessary\n    const query = queryString.parse(document.location.search.slice(1));\n    this.imageText = query.text;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {Observable, of} from 'rxjs';\nimport {catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageRequestService {\n\n  private requestUrl = 'https://vision.googleapis.com/v1p3beta1/images:annotate?key=AIzaSyCupsz_AoPxPSUNNHHKB1CMKfNJ41R0Xw0';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Request Google Vision API for text in image\n   * @param image Base64 encoding using alphanumeric, \"-\" and \"_\" characters\n   */\n  request(image: string): Observable<any> {\n    const req = {\n      'requests': [\n        {\n          'image': {\n            'content': image\n          },\n          'features': [\n            {\n              'type': 'DOCUMENT_TEXT_DETECTION'\n            }\n          ],\n          'imageContext': {\n            'languageHints': ['en-t-i0-handwrit']\n          }\n        }\n      ]\n    }\n\n    return this.http.post(this.requestUrl, req).pipe(\n      catchError(e => {\n        console.error(e);\n        return of({});\n      })\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Take a picture!</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <ons-list>\\n      <ons-list-item>\\n        Click \\\"choose file\\\" below then click \\\"take picture\\\" in the popup\\n      </ons-list-item>\\n      <ons-list-item>\\n        <ons-input type=\\\"file\\\" (change)=\\\"uploadPicture($event)\\\" accept=\\\"image/*\\\"></ons-input>\\n      </ons-list-item>\\n    </ons-list>\\n\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport * as queryString from 'querystring';\n\nimport {ImageRequestService} from '../services/image-request.service';\n\n\n@Component({\n  selector: 'app-take-picture',\n  templateUrl: './take-picture.component.html',\n  styleUrls: ['./take-picture.component.css']\n})\nexport class TakePictureComponent implements OnInit {\n\n  constructor(\n    private imageRequestService: ImageRequestService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Gets the image data, sends it to the Google Vision API, and pass the words to results via image-text service\n   * @param event Event passed in by the event emitter\n   */\n  uploadPicture(event: EventTarget) {\n    // get the file\n    const eventObj: MSInputMethodContext = <MSInputMethodContext> event;\n    const target: HTMLInputElement = <HTMLInputElement> eventObj.target;\n    const files: FileList = target.files;\n    const file = files[0];\n\n    // read image data in b64\n    const fileReader = new FileReader();\n    fileReader.onload = e => {\n      let b64 = fileReader.result;\n      // change to RFC 4648 \"Base 64 Encoding with URL and Filename Safe Alphabet\"\n      b64 = b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n      // remove \"data:image_jpeg;base64,\"\n      b64 = b64.slice(23);\n\n      console.log(b64);\n\n      this.imageRequestService.request(b64).subscribe(data => {\n        const text = data.responses[0].fullTextAnnotation.text;\n\n        document.location.href = '/results?' + queryString.stringify({\n          text: text\n        });\n      });\n    };\n    fileReader.readAsDataURL(file);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam sagittis posuere enim, eget sodales lectus interdum\\n  vitae. Nunc eu ligula sed orci pretium mattis. Aliquam condimentum dui in diam vehicula laoreet. Nam libero massa,\\n  interdum fermentum dui pretium, dictum viverra leo. Morbi viverra tellus nec urna ultricies cursus. Aliquam eleifend\\n  molestie metus sed lacinia. Donec condimentum venenatis ullamcorper. Nam nec accumsan dolor, sit amet faucibus est.\\n  Aenean lorem ipsum, pulvinar non fermentum vel, elementum et tellus. Etiam at sapien ornare metus scelerisque\\n  pharetra. Fusce scelerisque ac sem et rhoncus. Vivamus venenatis vestibulum tincidunt.\\n</p>\\n<button routerLink=\\\"/game\\\">Ok</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.css']\n})\nexport class TutorialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Welcome to Writelet</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <ons-list>\\n      <ons-list-header>About</ons-list-header>\\n      <ons-list-item>Writlet is an application focused around teaching students how to best\\n        retain information. Our inspiration for this project originates from flaws\\n        we have found in the popular application 'Quizlet'</ons-list-item>\\n      <ons-list-item>\\n        Please click the start button for a tutorial!\\n      </ons-list-item>\\n\\n      <ons-list-item modifier=\\\"chevron\\\" tappable routerLink=\\\"/tutorial\\\">Start</ons-list-item>\\n    </ons-list>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}