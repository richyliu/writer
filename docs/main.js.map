{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/intro/intro.component.css","webpack:///./src/app/intro/intro.component.html","webpack:///./src/app/intro/intro.component.ts","webpack:///./src/app/results/results.component.css","webpack:///./src/app/results/results.component.html","webpack:///./src/app/results/results.component.ts","webpack:///./src/app/services/definitions.service.ts","webpack:///./src/app/services/image-request.service.ts","webpack:///./src/app/take-picture/take-picture.component.css","webpack:///./src/app/take-picture/take-picture.component.html","webpack:///./src/app/take-picture/take-picture.component.ts","webpack:///./src/app/tutorial/tutorial.component.css","webpack:///./src/app/tutorial/tutorial.component.html","webpack:///./src/app/tutorial/tutorial.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AAEY;AAEQ;AACG;AACZ;AACuB;AACd;AACN;AAGvD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAC;IACjD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAC;IACzC,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAoB,EAAC;IACxD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAC;IAC/C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;CAC7C;AAWD;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAT5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC7B;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;YACD,YAAY,EAAE,EAAE;SACjB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC/B7B,mB;;;;;;;;;;;ACAA,oD;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAU1C;IAGE;QAFA,UAAK,GAAG,QAAQ,CAAC;IAEF,CAAC;IAHL,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,YAAY,CAMxB;IAAD,mBAAC;CAAA;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACe;AACD;AAEb;AAEK;AACS;AACO;AACG;AACZ;AACuB;AACd;AACN;AAyBzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAtBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,2EAAgB;gBAChB,8EAAiB;gBACjB,kEAAa;gBACb,yFAAoB;gBACpB,4EAAgB;gBAChB,sEAAc;aACf;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,oEAAgB;gBAChB,uDAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,OAAO,EAAE;gBACP,oEAAsB;aACvB;SACF,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvCtB,yBAAyB,oBAAoB,GAAG,WAAW,uBAAuB,oBAAoB,kBAAkB,gBAAgB,uBAAuB,uBAAuB,GAAG,mBAAmB,uBAAuB,gBAAgB,cAAc,iBAAiB,GAAG,G;;;;;;;;;;;ACArR,iOAAiO,YAAY,yN;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3L;AACiB;AAC5B;AACI;AAO3C;IAKE,uBACU,kBAAsC,EACtC,MAAc;QADd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QAJxB,oBAAe,GAAG,IAAI,CAAC;IAKnB,CAAC;IAEL,gCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAGD,gCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAEpD,2DAA2D;QAC3D,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,GAAG,qDAAqB,CAAC;gBACjE,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE;gBACxD,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE;aACjD,CAAC,CAAC,CAAC;SACL;IACH,CAAC;IA3BU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAO8B,gFAAkB;YAC9B,sDAAM;OAPb,aAAa,CA6BzB;IAAD,oBAAC;CAAA;AA7ByB;;;;;;;;;;;;ACV1B,mB;;;;;;;;;;;ACAA,uXAAuX,WAAW,iX;;;;;;;;;;;;;;;;;;;;;;;;ACAhV;AAOlD;IAKE;QAHA,aAAQ,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAGrC,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IARU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,gLAAgL,WAAW,gFAAgF,gBAAgB,qBAAqB,YAAY,qBAAqB,aAAa,2H;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5S;AAEP;AAQ3C;IAME;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;QACE,0FAA0F;QAC1F,IAAM,KAAK,GAAG,iDAAiB,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAM,YAAY,GAAG,KAAK,CAAC,IAAc,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,YAAY,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QAE3D,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;gBACrB,UAAU,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;gBACxB,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;aACxB,CAAC,CAAC;SACJ;IAEH,CAAC;IAGD,mBAAmB;IACnB,yFAAyF;IACzF,uCAAY,GAAZ,UAAa,SAAS,EAAE,IAAI;QAC1B,IAAM,OAAO,GAAG,EAAE,CAAC;QAGnB,2DAA2D;QAC3D,sDAAsD;QACtD,UAAU;QACV,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAG,CAAE,GAAG,EAAE;gBAC3F,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;aAC/B;SACF;QAED,4DAA4D;QAC5D,WAAW;QACX,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;QAGlC,4DAA4D;QAC5D,2CAA2C;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACpC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpC;QAED,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,WAAC;YACjB,OAAO,CAAC;iBACL,IAAI,EAAE;iBACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;iBACxB,WAAW,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,OAAO;YACL,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,OAAO;SACjB,CAAC;IACJ,CAAC;IArEU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAsE5B;IAAD,uBAAC;CAAA;AAtE4B;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AAK3C;IAgBE;QAfQ,gBAAW,GAAG;YACpB,kEAAkE;YAClE,gBAAgB;YAChB,kCAAkC;SACnC,CAAC;QAEM,YAAO,GAAG;YAChB,cAAc;YACd,YAAY;YACZ,aAAa;SACd,CAAC;QAGM,YAAO,GAAG,CAAC,CAAC;IAEJ,CAAC;IAEjB,kCAAK,GAAL;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,oCAAO,GAAP;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,GAAG,CAAC;IACb,CAAC;IAED,2DAA2D;IAC3D,8CAAiB,GAAjB;QACE,IAAM,GAAG,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED,4DAA4D;IAC5D,0CAAa,GAAb;QACE,IAAM,GAAG,GAAG,EAAE,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACvC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3B;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IA5CU,kBAAkB;QAH9B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kBAAkB,CA6C9B;IAAD,yBAAC;CAAA;AA7C8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLY;AACK;AAEZ;AACO;AAM3C;IAIE,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,eAAU,GAAG,qGAAqG,CAAC;IAEnF,CAAC;IAEzC;;;OAGG;IACH,qCAAO,GAAP,UAAQ,KAAa;QACnB,IAAM,GAAG,GAAG;YACV,UAAU,EAAE;gBACV;oBACE,OAAO,EAAE;wBACP,SAAS,EAAE,KAAK;qBACjB;oBACD,UAAU,EAAE;wBACV;4BACE,MAAM,EAAE,yBAAyB;yBAClC;qBACF;oBACD,cAAc,EAAE;wBACd,eAAe,EAAE,CAAC,kBAAkB,CAAC;qBACtC;iBACF;aACF;SACF,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,IAAI,CAC9C,iEAAU,CAAC,WAAC;YACV,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjB,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;QAChB,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAnCU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,mBAAmB,CAoC/B;IAAD,0BAAC;CAAA;AApC+B;;;;;;;;;;;;ACVhC,mB;;;;;;;;;;;ACAA,42C;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEP;AAE2B;AAC/B;AAQvC;IAEE,8BACU,mBAAwC,EACxC,MAAc;QADd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,uCAAQ,GAAR;IACA,CAAC;IAED;;;OAGG;IACH,4CAAa,GAAb,UAAc,KAAkB;QAAhC,iBAuCC;QAtCC,eAAe;QACf,IAAM,QAAQ,GAAgD,KAAK,CAAC;QACpE,IAAM,MAAM,GAAwC,QAAQ,CAAC,MAAM,CAAC;QACpE,IAAM,KAAK,GAAa,MAAM,CAAC,KAAK,CAAC;QACrC,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAEtB,yBAAyB;QACzB,IAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QACpC,UAAU,CAAC,MAAM,GAAG,WAAC;YACnB,mBAAmB;YACnB,IAAM,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC;YAC9B,IAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;YAE3B,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE;gBAC9B,yBAAyB;gBACzB,0BAA0B;gBAC1B,IAAI,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC/B,oBAAoB;gBAEpB,4EAA4E;gBAC5E,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACxD,mCAAmC;gBACnC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAE1B,8CAA8C;gBAC9C,KAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;oBACrD,6BAA6B;oBAC7B,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC;oBAEvD,gGAAgG;oBAChG,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAW,QAAQ,CAAC,QAAQ,CAAC,MAAM,SAAI,qDAAqB,CAAC;wBACrF,IAAI,EAAE,IAAI;qBACX,CAAG,CAAC,CAAC;gBACR,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;QACnB,CAAC,CAAC;QACF,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAGD,4CAA4C;IACpC,mCAAI,GAAZ,UAAa,MAAM;QACjB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAM,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAE9C,IAAM,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;QACzB,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;QAC3B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACpB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;QAErB,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtC,IAAM,SAAS,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC5C,IAAM,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACpF,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBACxB,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC5B,SAAS,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;aAC7B;SACF;QACD,aAAa,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;QACrF,OAAO,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC;IAlFU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAI+B,mFAAmB;YAChC,sDAAM;OAJb,oBAAoB,CAmFhC;IAAD,2BAAC;CAAA;AAnFgC;;;;;;;;;;;;ACbjC,uBAAuB,gBAAgB,GAAG,G;;;;;;;;;;;ACA1C,y0G;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;ACP9B,mB;;;;;;;;;;;ACAA,uzB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IALU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;;OACW,gBAAgB,CAO5B;IAAD,uBAAC;CAAA;AAP4B;;;;;;;;;;;;;ACP7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {TutorialComponent} from './tutorial/tutorial.component';\nimport {GameComponent} from './game/game.component';\nimport {TakePictureComponent} from './take-picture/take-picture.component';\nimport {ResultsComponent} from './results/results.component';\nimport {IntroComponent} from './intro/intro.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/welcome', pathMatch: 'full' },\n  { path: 'welcome', component: WelcomeComponent },\n  { path: 'tutorial', component: TutorialComponent},\n  { path: 'game', component: GameComponent},\n  { path: 'take-picture', component: TakePictureComponent},\n  { path: 'results', component: ResultsComponent},\n  { path: 'intro', component: IntroComponent }\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'writer';\n\n  constructor() {}\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { OnsenModule } from 'ngx-onsenui';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { TutorialComponent } from './tutorial/tutorial.component';\nimport { GameComponent } from './game/game.component';\nimport { TakePictureComponent } from './take-picture/take-picture.component';\nimport { ResultsComponent } from './results/results.component';\nimport { IntroComponent } from './intro/intro.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    TutorialComponent,\n    GameComponent,\n    TakePictureComponent,\n    ResultsComponent,\n    IntroComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    OnsenModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [\n    CUSTOM_ELEMENTS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","module.exports = \".game {\\n  font-size: 30px;\\n}\\n\\n.next {\\n  position: relative;\\n  font-size: 80px;\\n  height: 200px;\\n  width: 100%;\\n  text-align: center;\\n  line-height: 200px;\\n}\\n\\n.next-wrapper {\\n  position: absolute;\\n  bottom: 0px;\\n  left: 0px;\\n  width: 100vw;\\n}\\n\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Game</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <div *ngIf=\\\"hideTakePicture\\\" class=\\\"game\\\">\\n      <ons-card>\\n        <p>\\n          {{definition}}\\n        </p>\\n      </ons-card>\\n      <div class=\\\"next-wrapper\\\">\\n        <ons-button (click)=\\\"nextWord()\\\" modifier=\\\"large\\\" class=\\\"next\\\">Next</ons-button>\\n      </div>\\n    </div>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {DefinitionsService} from '../services/definitions.service';\nimport {Router} from '@angular/router';\nimport * as queryString from 'querystring';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  definition: string;\n  hideTakePicture = true;\n\n  constructor(\n    private definitionsService: DefinitionsService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.definitionsService.reset();\n    this.nextWord();\n  }\n\n\n  nextWord(): void {\n    this.definition = this.definitionsService.getNext();\n\n    // once definitions run out, unhide the take picture button\n    if (!this.definition) {\n      this.hideTakePicture = false;\n      this.router.navigateByUrl('/take-picture?' + queryString.stringify({\n        definitions: this.definitionsService.getAllDefinitions(),\n        answers: this.definitionsService.getAllAnswers()\n      }));\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Intro to Game</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n\\n    <p>\\n      Choose which subject you want for the quiz\\n    </p>\\n\\n    <div style=\\\"margin: 10px\\\">\\n      <ons-select [(ngModel)]=\\\"subject\\\">\\n        <option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject\\\">\\n          {{ subject }}\\n        </option>\\n      </ons-select>\\n    </div>\\n\\n    <ons-list>\\n      <ons-list-item>\\n        <ons-button routerLink = \\\"/tutorial\\\"> Want to review the tutorial? </ons-button>\\n      </ons-list-item>\\n\\n      <ons-list-item>\\n        <ons-button routerLink=\\\"/game\\\">Let's begin!</ons-button>\\n      </ons-list-item>\\n    </ons-list>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.css']\n})\nexport class IntroComponent implements OnInit {\n\n  subjects = ['Math', 'Science', 'English', 'Spanish'];\n  subject: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Results</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <p>Correct: 0</p>\\n    <p>Your text: {{imageText}}</p>\\n    <table>\\n      <tr *ngFor=\\\"let row of displayTable\\\">\\n        <td>{{row.userAnswer}}</td>\\n        <td>{{row.answer}}</td>\\n        <td>{{row.correct}}</td>\\n      </tr>\\n    </table>\\n\\n\\n    <ons-button routerLink=\\\"/welcome\\\">Again!</ons-button>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport * as queryString from 'querystring';\n\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  imageText: string;\n  // contains user's answers, correct answers, and correct boolean\n  displayTable: object[];\n\n  constructor() { }\n\n  ngOnInit() {\n    // get the query, removing the ? (although documentation says unnecessary, still necessary\n    const query = queryString.parse(document.location.search.slice(1));\n    const responseText = query.text as string;\n    this.imageText = responseText;\n    console.log(query);\n\n    const res = this.processInput(responseText, query.answers);\n\n    this.displayTable = [];\n    for (let i = 0; i < query.answers.length; i++) {\n      this.displayTable.push({\n        userAnswer: res.input[i],\n        answer: query.answers[i],\n        correct: res.correct[i]\n      });\n    }\n\n  }\n\n\n  // written by suraj\n  // function that takes json text from user attempts and splits //data and returns a table\n  processInput(parseText, real): any {\n    const correct = [];\n\n\n    // goes through the input strings and takes out the numbers\n    // and parentheses that represent the beginning of the\n    // problem\n    let string = '\\n';\n    for (let i = 0; i < parseText.length; i++) {\n      if ((parseText.charAt(i) < '1' || parseText.charAt(i) > '9') && parseText.charAt(i) !=+ ')') {\n        string += parseText.charAt(i);\n      }\n    }\n\n    // splits the string into a list of the individual inputs of\n    // the user\n    let input = string.split('\\n');\n    input.splice(0, 1);\n    input.splice(input.length - 1, 1);\n\n\n    // goes through each item in the inputs and the answers, and\n    // if they are the same, mark it as correct\n    for (let i = 0; i < real.length; i++) {\n      correct.push(input[i] === real[i]);\n    }\n\n    input = input.map(a => {\n      return a\n        .trim()\n        .split(' ')[a.length - 1]\n        .toLowerCase();\n    });\n\n    return {\n      input: input,\n      correct: correct\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefinitionsService {\n  private definitions = [\n    'The quality of being real and true instead of fake and contrived',\n    'Kind, generous',\n    'Thrilling, exciting, stimulating'\n  ];\n\n  private answers = [\n    'authenticity',\n    'benevolent',\n    'galvanizing'\n  ];\n\n\n  private current = 0;\n\n  constructor() { }\n\n  reset() {\n    this.current = 0;\n  }\n\n  getNext(): string {\n    const ret = this.definitions[this.current];\n    this.current++;\n    return ret;\n  }\n\n  // get all the definitions that have been called by getNext\n  getAllDefinitions(): string[] {\n    const ret = [];\n    for (let i = 0; i < this.current-1; i++) {\n      ret.push(this.definitions[i]);\n    }\n    return ret;\n  }\n\n  // get all the answers for the corresponding all definitions\n  getAllAnswers(): string[] {\n    const ret = [];\n    for (let i = 0; i < this.current-1; i++) {\n      ret.push(this.answers[i]);\n    }\n    return ret;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {Observable, of} from 'rxjs';\nimport {catchError } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageRequestService {\n\n  private requestUrl = 'https://vision.googleapis.com/v1p3beta1/images:annotate?key=AIzaSyCupsz_AoPxPSUNNHHKB1CMKfNJ41R0Xw0';\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Request Google Vision API for text in image\n   * @param image Base64 encoding using alphanumeric, \"-\" and \"_\" characters\n   */\n  request(image: string): Observable<any> {\n    const req = {\n      'requests': [\n        {\n          'image': {\n            'content': image\n          },\n          'features': [\n            {\n              'type': 'DOCUMENT_TEXT_DETECTION'\n            }\n          ],\n          'imageContext': {\n            'languageHints': ['en-t-i0-handwrit']\n          }\n        }\n      ]\n    };\n\n    return this.http.post(this.requestUrl, req).pipe(\n      catchError(e => {\n        console.error(e);\n        return of({});\n      })\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Take a picture!</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <ons-list>\\n      <ons-list-header>Instructions</ons-list-header>\\n      <ons-list-item>\\n        For the picture that you take, please make sure that the\\n        text is horizontal. Flash is not required while taking the\\n        picture, as our program will compensate.\\n      </ons-list-item>\\n    </ons-list>\\n\\n    <ons-list>\\n      <ons-list-item>\\n        Remember that pictures must:\\n      </ons-list-item>\\n\\n      <ons-list-item>\\n        1) Not be too close to the red margin of the paper\\n      </ons-list-item>\\n\\n      <ons-list-item>\\n        2) Have lines in the format '#) answer'\\n      </ons-list-item>\\n\\n      <ons-list-item>\\n        3) Must be angled directly above the paper\\n      </ons-list-item>\\n\\n      <ons-list-item>\\n        4) Have no spaces that seperate individual words\\n      </ons-list-item>\\n    </ons-list>\\n\\n    <ons-list>\\n      <ons-list-header> Upload Picture </ons-list-header>\\n      <ons-list-item>\\n        Click \\\"choose file\\\" below then click \\\"take picture\\\" in the popup\\n      </ons-list-item>\\n      <ons-list-item>\\n        <ons-input type=\\\"file\\\" (change)=\\\"uploadPicture($event)\\\" accept=\\\"image/*\\\"></ons-input>\\n      </ons-list-item>\\n    </ons-list>\\n\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport * as queryString from 'querystring';\n\nimport {ImageRequestService} from '../services/image-request.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-take-picture',\n  templateUrl: './take-picture.component.html',\n  styleUrls: ['./take-picture.component.css']\n})\nexport class TakePictureComponent implements OnInit {\n\n  constructor(\n    private imageRequestService: ImageRequestService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Gets the image data, sends it to the Google Vision API, and pass the words to results via image-text service\n   * @param event Event passed in by the event emitter\n   */\n  uploadPicture(event: EventTarget) {\n    // get the file\n    const eventObj: MSInputMethodContext = <MSInputMethodContext> event;\n    const target: HTMLInputElement = <HTMLInputElement> eventObj.target;\n    const files: FileList = target.files;\n    const file = files[0];\n\n    // read image data in b64\n    const fileReader = new FileReader();\n    fileReader.onload = e => {\n      // base 64 of image\n      const b64 = fileReader.result;\n      const imgObj = new Image();\n\n      imgObj.addEventListener('load', () => {\n        // TODO: using grayscale?\n        // grayscale base 64 image\n        let gray64 = this.gray(imgObj);\n        // let gray64 = b64;\n\n        // change to RFC 4648 \"Base 64 Encoding with URL and Filename Safe Alphabet\"\n        gray64 = gray64.replace(/\\+/g, '-').replace(/\\//g, '_');\n        // remove \"data:image_jpeg;base64,\"\n        gray64 = gray64.slice(23);\n\n        // google vision api request with base64 image\n        this.imageRequestService.request(gray64).subscribe(data => {\n          // get the text from the json\n          const text = data.responses[0].fullTextAnnotation.text;\n\n          // navigate to results with the text interpretation from google vision, pass current query along\n          this.router.navigateByUrl(`/results${document.location.search}&${queryString.stringify({\n            text: text\n          })}`);\n        });\n      });\n      imgObj.src = b64;\n    };\n    fileReader.readAsDataURL(file);\n  }\n\n\n  // grayscale helper function written by Eric\n  private gray(imgObj): string {\n    console.log(imgObj);\n    const canvas = document.createElement('canvas');\n    const canvasContext = canvas.getContext('2d');\n\n    const imgW = imgObj.width;\n    console.log('W:' + imgW);\n    const imgH = imgObj.height;\n    canvas.width = imgW;\n    canvas.height = imgH;\n\n    canvasContext.drawImage(imgObj, 0, 0);\n    const imgPixels = canvasContext.getImageData(0, 0, imgW, imgH);\n\n    for (let y = 0; y < imgPixels.height; y++) {\n      for (let x = 0; x < imgPixels.width; x++) {\n        const i = (y * 4) * imgPixels.width + x * 4;\n        const avg = (imgPixels.data[i] + imgPixels.data[i + 1] + imgPixels.data[i + 2]) / 3;\n        imgPixels.data[i] = avg;\n        imgPixels.data[i + 1] = avg;\n        imgPixels.data[i + 2] = avg;\n      }\n    }\n    canvasContext.putImageData(imgPixels, 0, 0, 0, 0, imgPixels.width, imgPixels.height);\n    return canvas.toDataURL('image/jpeg');\n  }\n}\n","module.exports = \"img {\\n  width: 100%;\\n}\\n\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Tutorial</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <ons-list>\\n      <ons-list-header>Instructions</ons-list-header>\\n      <ons-list-item>\\n        For the picture that you take, please make sure that the\\n        text is horizontal. Flash is not required while taking the\\n        picture, as our program will compensate. Follow the\\n        instructions below for the highest grading accuracy.\\n      </ons-list-item>\\n    </ons-list>\\n\\n    <ons-list>\\n      <ons-list-header> Common Mistakes </ons-list-header>\\n      <ons-list>\\n        <ons-list-item>\\n          Here's an image with a couple of mistakes. The errors\\n          are listed with their corresponding number:\\n        </ons-list-item>\\n\\n        <ons-list-item>\\n          1) The space between the '1)' symbol and word is too large.\\n        </ons-list-item>\\n\\n        <ons-list-item>\\n        2) This answer completely fine.\\n        </ons-list-item>\\n\\n        <ons-list-item>\\n        3) The space between the word is too large.\\n        Our grader may read it as two seperate words.\\n        </ons-list-item>\\n\\n        <ons-list-item>\\n        4) There is a '.' instead of a ')' symbol.\\n        </ons-list-item>\\n      </ons-list>\\n    </ons-list>\\n\\n    <img src=\\\"../../assets/WriteletMistake1.png\\\">\\n\\n    <ons-list>\\n      <ons-list-header> Taking the Picture </ons-list-header>\\n      <ons-list>\\n        <ons-list-item>\\n          <b> A Good Picture </b>\\n        </ons-list-item>\\n\\n        <img src=\\\"../../assets/GoodImage.jpg\\\">\\n\\n        <ons-list-item>\\n          Notice how the image only has numbers with their\\n          respective answers, and the lighting is relatively consistent.\\n        </ons-list-item>\\n      </ons-list>\\n\\n      <ons-list>\\n        <ons-list-item>\\n          <b> A Bad Picture #1 </b>\\n        </ons-list-item>\\n\\n        <img src = \\\"../../assets/BadImage1.jpg\\\">\\n\\n        <ons-list-item>\\n          This picture contains a lot of useless information\\n          such as the image of another paper, the table, and\\n          some black space at the bottom. Pictures should be\\n          clear and concise.\\n        </ons-list-item>\\n      </ons-list>\\n\\n      <ons-list>\\n        <ons-list-item>\\n          <b> Bad Picture #2 </b>\\n        </ons-list-item>\\n\\n        <img src = \\\"../../assets/BadImage2.jpg\\\">\\n\\n        <ons-list-item>\\n          This picture is taken at a diagonal angle. This won't hinder\\n          the Machine Learning algorithm that much, but to ensure\\n          the highest accuracy from our training model we encourage\\n          pictures to be taken directly above the paper.\\n        </ons-list-item>\\n      </ons-list>\\n\\n      <ons-list>\\n        <ons-list-item>\\n          <b> Bad Picture #3 </b>\\n        </ons-list-item>\\n\\n        <img src = \\\"../../assets/BadImage3.jpg\\\">\\n\\n        <ons-list-item>\\n          The red line from the margin is too close to the\\n          answers. This can disrupt our program as it will interpret\\n          this line as a stream of '1' characters\\n        </ons-list-item>\\n      </ons-list>\\n    </ons-list>\\n\\n    <ons-list>\\n      <ons-list-header>Links</ons-list-header>\\n      <ons-list-item modifier=\\\"chevron\\\" tappable routerLink=\\\"/intro\\\">Take the Quiz!</ons-list-item>\\n    </ons-list>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.css']\n})\nexport class TutorialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<ons-page>\\n  <ons-toolbar>\\n    <div class=\\\"center\\\">Welcome to Writelet</div>\\n  </ons-toolbar>\\n  <div class=\\\"content\\\">\\n    <ons-list>\\n      <ons-list-header>About</ons-list-header>\\n      <ons-list-item>Writlet is an application focused around teaching students how to best\\n        retain information. Our inspiration for this project originates from flaws\\n        we have found in the popular application 'Quizlet'\\n      </ons-list-item>\\n\\n      <ons-list>\\n        <ons-list-item>\\n          <ons-button routerLink = \\\"/tutorial\\\"> Want to review the tutorial? </ons-button>\\n        </ons-list-item>\\n\\n        <ons-list-item>\\n          <ons-button routerLink=\\\"/intro\\\"> Take the Quiz! </ons-button>\\n        </ons-list-item>\\n      </ons-list>\\n    </ons-list>\\n  </div>\\n</ons-page>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}